# Enterprise Business Impact Configuration - Working Version
# Full revenue analysis and business scoring with circuit breaker pattern

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  # Prometheus federation receiver to pull metrics from other modules
  prometheus:
    config:
      scrape_configs:
        - job_name: 'sql-intelligence-federation'
          scrape_interval: 10s
          static_configs:
            - targets: ['${env:SQL_INTELLIGENCE_ENDPOINT:-sql-intelligence:8082}']
          metric_relabel_configs:
            - source_labels: [__name__]
              regex: '(mysql_query_.*|sql_intelligence_.*)'
              action: keep
              
        - job_name: 'core-metrics-federation'
          scrape_interval: 10s
          static_configs:
            - targets: ['${env:CORE_METRICS_ENDPOINT:-core-metrics:8081}']
          metric_relabel_configs:
            - source_labels: [__name__]
              regex: 'mysql_.*'
              action: keep

processors:
  # Memory management with increased limits for business logic processing
  memory_limiter:
    check_interval: 5s
    limit_percentage: 85
    spike_limit_percentage: 30

  batch/standard:
    timeout: 10s
    send_batch_size: 5000
    send_batch_max_size: 10000

  batch/critical:
    timeout: 2s
    send_batch_size: 500
    send_batch_max_size: 1000

  # Core attributes for business impact
  attributes/business_impact:
    actions:
      - key: module
        value: business-impact
        action: insert
      - key: module.type
        value: business-impact-analyzer
        action: insert
      - key: cluster.name
        value: ${env:CLUSTER_NAME}
        action: insert
      - key: environment
        value: ${env:ENVIRONMENT}
        action: insert
      - key: tier
        value: intelligence
        action: insert

  resource/standard:
    attributes:
      - key: service.name
        value: business-impact
        action: upsert
      - key: service.version
        value: 2.0.0
        action: upsert
      - key: analysis.model.version
        value: 1.0.0
        action: upsert

  # New Relic specific attributes for standard pipeline
  attributes/newrelic_standard:
    actions:
      - key: newrelic.source
        value: opentelemetry
        action: insert
      - key: instrumentation.name
        value: mysql-business-impact
        action: insert
      - key: instrumentation.version
        value: 2.0.0
        action: insert
      - key: instrumentation.provider
        value: opentelemetry
        action: insert
      - key: pipeline.type
        value: standard
        action: insert

  # New Relic specific attributes for critical business metrics
  attributes/newrelic_critical:
    actions:
      - key: newrelic.source
        value: opentelemetry
        action: insert
      - key: instrumentation.name
        value: mysql-business-impact
        action: insert
      - key: instrumentation.version
        value: 2.0.0
        action: insert
      - key: instrumentation.provider
        value: opentelemetry
        action: insert
      - key: pipeline.type
        value: critical
        action: insert
      - key: priority
        value: high
        action: insert
      - key: business.critical
        value: "true"
        action: insert

  # Entity synthesis for New Relic One
  attributes/entity_synthesis:
    actions:
      - key: entity.type
        value: MYSQL_BUSINESS_IMPACT
        action: insert
      - key: entity.guid
        value: BUSINESS|${env:CLUSTER_NAME}|business-impact
        action: insert
      - key: entity.name
        value: business-impact-analyzer
        action: insert
      - key: newrelic.entity.synthesis
        value: "true"
        action: insert

  # Business metadata enrichment
  attributes/business_metadata:
    actions:
      # Revenue impact scoring configuration
      - key: business.revenue_impact_score
        value: ${env:REVENUE_IMPACT_SCORE:-10.0}
        action: insert
      - key: business.customer_impact_score
        value: ${env:CUSTOMER_IMPACT_SCORE:-8.0}
        action: insert
      - key: business.operations_impact_score
        value: ${env:OPERATIONS_IMPACT_SCORE:-7.0}
        action: insert
      - key: business.analytics_impact_score
        value: ${env:ANALYTICS_IMPACT_SCORE:-5.0}
        action: insert
      - key: business.admin_impact_score
        value: ${env:ADMIN_IMPACT_SCORE:-3.0}
        action: insert
      # SLA thresholds
      - key: business.sla_critical_threshold
        value: ${env:SLA_CRITICAL_THRESHOLD:-5.0}
        action: insert
      - key: business.sla_warning_threshold
        value: ${env:SLA_WARNING_THRESHOLD:-2.0}
        action: insert
      # Revenue calculations
      - key: business.baseline_revenue_per_second
        value: ${env:BASELINE_REVENUE_PER_SECOND:-1000.0}
        action: insert
      - key: business.max_impact_score
        value: ${env:MAX_IMPACT_SCORE:-10.0}
        action: insert
      # Boost factors
      - key: business.revenue_boost_factor
        value: ${env:REVENUE_BOOST_FACTOR:-1.5}
        action: insert
      - key: business.customer_boost_factor
        value: ${env:CUSTOMER_BOOST_FACTOR:-1.3}
        action: insert

exporters:
  # Standard New Relic exporter for all business metrics
  otlphttp/newrelic_standard:
    endpoint: ${env:NEW_RELIC_OTLP_ENDPOINT}
    headers:
      api-key: ${env:NEW_RELIC_LICENSE_KEY}
    compression: gzip
    timeout: 30s
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 60s
      max_elapsed_time: 300s
    sending_queue:
      enabled: true
      num_consumers: 10
      queue_size: 20000

  # Critical New Relic exporter for high-priority business metrics
  otlphttp/newrelic_critical:
    endpoint: ${env:NEW_RELIC_OTLP_ENDPOINT}
    headers:
      api-key: ${env:NEW_RELIC_LICENSE_KEY}
    compression: none
    timeout: 10s
    retry_on_failure:
      enabled: true
      initial_interval: 2s
      max_interval: 20s
      max_elapsed_time: 120s
    sending_queue:
      enabled: true
      num_consumers: 5
      queue_size: 10000

  # OTLP for forwarding to other systems
  otlp:
    endpoint: ${env:OTLP_ENDPOINT:-otel-collector:4317}
    tls:
      insecure: true

  # Prometheus exporter for local monitoring
  prometheus:
    endpoint: "0.0.0.0:${env:EXPORT_PORT}"
    namespace: business_impact
    const_labels:
      module: business-impact
      cluster: ${env:CLUSTER_NAME}
    resource_to_telemetry_conversion:
      enabled: true

  # Debug exporter for troubleshooting
  debug:
    verbosity: basic
    sampling_initial: 10
    sampling_thereafter: 1000

  # File exporter for business reports
  file/business_reports:
    path: /tmp/business-reports/impact-analysis.json
    rotation:
      max_megabytes: 100
      max_days: 30
      max_backups: 30
    format: json

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
    check_collector_pipeline:
      enabled: true
      interval: 30s
      exporter_failure_threshold: 5

  pprof:
    endpoint: 0.0.0.0:6060

  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]
  
  pipelines:
    # Main pipeline for business impact metrics
    metrics/business_analysis:
      receivers: [otlp, prometheus]
      processors: [
        memory_limiter,
        batch/standard,
        attributes/business_metadata,
        attributes/business_impact,
        resource/standard,
        attributes/newrelic_standard,
        attributes/entity_synthesis
      ]
      exporters: [otlphttp/newrelic_standard, prometheus, otlp, debug]

    # Critical business metrics pipeline
    metrics/critical_business:
      receivers: [otlp, prometheus]
      processors: [
        memory_limiter,
        batch/critical,
        attributes/business_metadata,
        attributes/business_impact,
        resource/standard,
        attributes/newrelic_critical,
        attributes/entity_synthesis
      ]
      exporters: [otlphttp/newrelic_critical, file/business_reports]

    # Metrics federation pipeline
    metrics/federation:
      receivers: [prometheus]
      processors: [
        memory_limiter,
        batch/standard,
        attributes/business_impact,
        resource/standard
      ]
      exporters: [prometheus]

  telemetry:
    logs:
      level: info
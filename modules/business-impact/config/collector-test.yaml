receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
        
  # Also pull metrics from SQL intelligence
  prometheus:
    config:
      scrape_configs:
        - job_name: 'sql-intelligence'
          scrape_interval: 10s
          static_configs:
            - targets: ['${env:SQL_INTELLIGENCE_ENDPOINT}']
          metric_relabel_configs:
            - source_labels: [__name__]
              regex: 'mysql_query_.*'
              action: keep

processors:
  batch:
    timeout: 1s
    send_batch_size: 1024
    
  # Simple business impact scoring
  attributes:
    actions:
      - key: module
        value: business-impact
        action: insert
      - key: business.analyzer
        value: "enabled"
        action: insert
        
  attributes/business_metadata:
    actions:
      - key: service.component
        value: "business-impact"
        action: insert
      - key: module.type
        value: "business-impact-analyzer"
        action: insert
        
  resource:
    attributes:
      - key: service.name
        value: ${env:OTEL_SERVICE_NAME}
        action: upsert

exporters:
  prometheus:
    endpoint: "0.0.0.0:8889"
    const_labels:
      module: "business-impact"
    resource_to_telemetry_conversion:
      enabled: true

  debug:
    verbosity: detailed
    sampling_initial: 10
    sampling_thereafter: 100

service:
  telemetry:
    logs:
      level: "info"
    metrics:
      level: "detailed"
      address: 0.0.0.0:8888

  pipelines:
    metrics:
      receivers: [otlp, prometheus]
      processors: [batch, attributes, attributes/business_metadata, resource]
      exporters: [prometheus, debug]

  extensions: [health_check, pprof, zpages]

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
  pprof:
    endpoint: 0.0.0.0:6060
  zpages:
    endpoint: 0.0.0.0:55679
